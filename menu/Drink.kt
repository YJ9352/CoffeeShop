package coffeeshop.menu

import coffeeshop.Cart
import coffeeshop.CashDesk
import coffeeshop.isNumeric
import coffeeshop.main
import kotlin.system.exitProcess

class Drink {
    fun drinkOrder(cart: Cart) {
        val cashDesk = CashDesk() // 주문조회
        val cart = Cart() // 카트

        val pickList = arrayListOf<PickList>()// 메뉴 담아서 픽하기
        val cartList = arrayListOf<Cart>() // 픽한 메뉴 목록으로 출력


        println("어서오세요! 고객님.  |  현재 주문 대기 수는 [ 0 ] 명 입니다.")
        println(" ---------------------------------------------------------------------------------------------------")
        println("[ Coffee Menu ]  [Price]  [Menu description]")
        println(" ---------------------------------------------------------------------------------------------------")
        println("1. 레몬 셔벗에이드   6,000  생라임, 민트 잎이 어우러져 시원하고 청량하게 즐길 수 있는 에이드.\n" +
                "2. 밀크티 쉐이크     7,000  얼그레이 향이 감도는 블랙 티와 진한 소프트 아이스크림이 어우러진 디저트 음료.\n" +
                "3. 오렌지 자몽 주스  6,000  오렌지와 자몽의 상큼한 맛이 입안 가득 느껴지는 주스.\n" +
                "4. 수박 주스        5,000  수박을 통째로 갈아 넣어 만든 시원한 수박 주스.\n" +
                "5. 초콜릿 라떼      6,000  초콜릿의 풍부한 맛과 휘핑크림, 초코칩이 조화로운 달콤한 초콜릿 음료.\n")
        println(" ---------------------------------------------------------------------------------------------------")
        println(":: MENU ::                                                 8. 메인으로  |  9. 주문조회  |  0. 종료  ")
        println(" ---------------------------------------------------------------------------------------------------")

        while (true) {
            val cPick = readln() // 메뉴 고르기
            if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                println(" ---------------------------------------------------------------------------------------------------")
                println("                                  메뉴 입력은 숫자만 해주세요.")
                println(" ---------------------------------------------------------------------------------------------------")
                continue
            }

            when (cPick.toInt()) {
                1 -> {
                    val americano = PickList("레몬셔벗에이드", 6000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${americano.menuName}, ${americano.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")
                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("레몬셔벗에이드", 6000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                2 -> {
                    val latte = PickList("밀크티쉐이크", 7000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${latte.menuName}, ${latte.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")

                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("밀크티쉐이크", 7000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                3 -> {
                    val macchiato = PickList("오렌지자몽주스", 6000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${macchiato.menuName}, ${macchiato.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")

                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("오렌지자몽주스", 6000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                4 -> {
                    val affogato = PickList("수박주스", 5000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${affogato.menuName}, ${affogato.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")

                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("수박주스", 5000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                5 -> {
                    val espresso = PickList("초콜릿라떼", 6000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${espresso.menuName}, ${espresso.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")

                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("초콜릿라떼", 6000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                8 -> return main()

                9 -> cashDesk.orderList(pickList)

                0 -> exitProcess(0)

                else -> {
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                                       잘못된 입력입니다.")
                    println(" ---------------------------------------------------------------------------------------------------")
                    return
                }
            }
        }
    }
}