package coffeeshop.menu

import coffeeshop.Cart
import coffeeshop.CashDesk
import coffeeshop.isNumeric
import coffeeshop.main
import kotlin.system.exitProcess

class Decaf {
    fun decafOrder(cart: Cart) {
        val cashDesk = CashDesk() // 주문조회
        val cart = Cart() // 카트

        val pickList = arrayListOf<PickList>()// 메뉴 담아서 픽하기
        val cartList = arrayListOf<Cart>() // 픽한 메뉴 목록으로 출력


        println("어서오세요! 고객님.  |  현재 주문 대기 수는 [ 0 ] 명 입니다.")
        println(" ---------------------------------------------------------------------------------------------------")
        println("[ Decaf Menu ]  [Price]  [Menu description]")
        println(" ---------------------------------------------------------------------------------------------------")
        println("1. 디카페인커피     5,000  진하게 로스팅한 커피 원두의 풍미가 느껴지는 디카페인 음료.\n" +
                "2. 디카페라떼       6,000  에스프레소와 스팀밀크 위에 부드러운 우유 거품을 살짝 올려준 디카페인 음료.\n" +
                "3. 데이&나잇       6,000  SWP디카페인 커피에 페퍼민트티를 더한 커피.\n")
        println(" ---------------------------------------------------------------------------------------------------")
        println(":: MENU ::                                                 8. 메인으로  |  9. 주문조회  |  0. 종료  ")
        println(" ---------------------------------------------------------------------------------------------------")

        while (true) {
            val cPick = readln() // 메뉴 고르기
            if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                println(" ---------------------------------------------------------------------------------------------------")
                println("                                  메뉴 입력은 숫자만 해주세요.")
                println(" ---------------------------------------------------------------------------------------------------")
                continue
            }

            when (cPick.toInt()) {
                1 -> {
                    val decoffee = PickList("디카페인커피", 5000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${decoffee.menuName}, ${decoffee.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")
                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("디카페인커피", 5000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                2 -> {
                    val delatte = PickList("디카페라떼", 6000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${delatte.menuName}, ${delatte.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")

                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("디카페라떼", 6000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                3 -> {
                    val dayNight = PickList("데이&나잇", 6000, 1)
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                           선택하신 메뉴는 ${dayNight.menuName}, ${dayNight.menuPrice}원 입니다.")
                    println("                                 구입하실 갯수를 입력해 주세요.")
                    println(" ---------------------------------------------------------------------------------------------------")

                    val cPick = readln() // 갯수 선택
                    if (!cPick.isNumeric()) { // 숫자 외 입력시 오류처리
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                  메뉴 입력은 숫자만 해주세요.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        continue
                    }

                    // 선택한 품목, 값, 합계, 잔액 표시
                    if (cPick.toInt() >= 1) {
                        val price = PickList("데이&나잇", 6000, 1 * cPick.toInt())
                        cart.addPickList(price) // 윗줄에서 계산한 값을 보여줌
                        price.priceDisplayInfo() // 가격 합계 보여줌

                        Thread.sleep(2000) // 너무 빨리 넘어가서 대기시간
                        return
                    } else {
                        println(" ---------------------------------------------------------------------------------------------------")
                        println("                                   1보다 적은 갯수는 선택할 수 없습니다.")
                        println(" ---------------------------------------------------------------------------------------------------")
                        return
                    }
                }

                8 -> return main()

                9 -> cashDesk.orderList(pickList) //프라이스리스트

                0 -> exitProcess(0)

                else -> {
                    println(" ---------------------------------------------------------------------------------------------------")
                    println("                                       잘못된 입력입니다.")
                    println(" ---------------------------------------------------------------------------------------------------")
                    return
                }
            }
        }

    }
}